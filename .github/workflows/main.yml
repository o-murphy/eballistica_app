name: CI android build
on:
  pull_request:
    branches:
      - kivymd-nightly
      - kivymd-dev
      - kivymd-main
  push:
    branches:
      - kivymd-nightly
      - kivymd-dev
      - kivymd-main
      - py_ballisticcalc_test
#  schedule:
#    - cron: '0 0 1,15 * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.10
          
#      # Add caching step for Python dependencies
#      - name: Cache Python dependencies
#        uses: actions/cache@v2
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-
          
      - name: Setup environment
        run: |
          sudo apt-get install libtool
          pip install --user --upgrade Cython==0.29.36
          pip install --user --upgrade buildozer
          pip freeze > requirements-pre.txt

      # Install OS specific dependencies
      - name: Install Linux dependencies
        run: sudo apt -y install automake
      
      - name: SDK, NDK and p4a download
        run: |
          sed -i.bak "s/# android.accept_sdk_license = False/android.accept_sdk_license = True/" buildozer.spec
          sed -i.bak "s/#p4a.branch = master/p4a.branch = develop/" buildozer.spec
          buildozer android p4a -- --help

      - name: Extract version and requirements
        id: extract_version
        run: |
          version=$(grep -o "__version__ = '[0-9.]*'" __version__.py | sed "s/__version__ = '//" | sed "s/'//")  # Extract version from main.py
          echo "Extracted version: $version"
          echo "::set-output name=version::$version"
          requirements=$(grep -Eo '[^[:space:]]+' requirements.txt | tr '\n' ',')  # Extract requirements
          echo "Extracted requirements: $requirements"
          echo "::set-output name=requirements::$requirements"

      - name: Update buildozer.spec with extracted version and requirements
        run: |
          sed -i.bak "s|requirements =.*|requirements = python3,${{ steps.update_requirements.outputs.requirements }}|" buildozer.spec
          sed -i.bak "s/version =.*/version = ${{ steps.extract_version.outputs.version }}/" buildozer.spec

      - name: Upload Artifacts (buildozer.spec)
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-spec
          path: buildozer.spec

      - name: buildozer android debug
        run: |
          touch main.py
          buildozer android debug

# # Disabled temporary
#      - name: buildozer android release (aab)
#        run: |
#          touch main.py
#          export BUILDOZER_ALLOW_ORG_TEST_DOMAIN=1
#          buildozer android release
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-release
          path: bin

      - name: Upload and Send to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_USER_ID }}
          token: ${{ secrets.TG_GITHUB_ARTIFACTS_TOKEN }}
          document: ./bin/* # Change the path to match your artifacts
          
