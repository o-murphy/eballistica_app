name: CI android build
on:
#  pull_request:
#    branches:
#      - kivymd-nightly

  push:
    branches:
      - kivymd-nightly

  workflow_dispatch:
    inputs:
      buildozerLogLevel:
        type: choice
        description: 'Buildozer Log level'
        required: true
        options:
          - '0'
          - '1'
          - '2'
        default: '1'
      tags:
        description: 'Test scenario tags'



jobs:
  build-droid:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Restore .buildozer directory
        uses: actions/cache@v2
        with:
          path: ~/.buildozer
          key: buildozer-${{ runner.os }}
          restore-keys: |
            buildozer-${{ runner.os }}

      - name: Set up Python 3.10.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.10
          
      - name: Setup environment
        run: |
          sudo apt-get install libtool
          pip install --user --upgrade Cython==0.29.36
          pip install --user --upgrade buildozer
#          pip freeze > requirements-pre.txt

      # Install OS specific dependencies
      - name: Install Linux dependencies
        run: sudo apt -y install automake
      
      - name: SDK, NDK and p4a download settings
        run: |
          sed -i.bak "s/# android.accept_sdk_license = False/android.accept_sdk_license = True/" buildozer.spec
          sed -i "s/^log_level = .*/log_level = ${{{ inputs.buildozerLogLevel }}}/" buildozer.spec

#          sed -i.bak "s/#p4a.branch = master/p4a.branch = develop/" buildozer.spec
#          buildozer android p4a -- --help

#      - name: Extract requirements
#        id: extract_props
#        run: |
#          requirements=$(grep -Eo '[^[:space:]]+' requirements-droid.txt | tr '\n' ',')
#          echo "Extracted requirements: $requirements"
#          echo "::set-output name=requirements::$requirements"

#      - name: Update buildozer.spec with requirements
#        run: |
#          sed -i.bak "s|requirements =.*|requirements = python3,${{ steps.extract_props.outputs.requirements }}|" buildozer.spec

      - name: Upload Artifacts (buildozer.spec)
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-spec
          path: buildozer.spec

      - name: buildozer android debug
        run: |
          touch main.py
          buildozer android debug

# # Disabled temporary
#      - name: buildozer android release (aab)
#        run: |
#          touch main.py
#          export BUILDOZER_ALLOW_ORG_TEST_DOMAIN=1
#          buildozer android release
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts-release
          path: bin

      - name: Upload and Send to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_USER_ID }}
          token: ${{ secrets.TG_GITHUB_ARTIFACTS_TOKEN }}
          document: ./bin/* # Change the path to match your artifacts

      - name: Cache .buildozer directory
        uses: actions/cache@v2
        with:
          path: ~/.buildozer  # Specify the original location of .buildozer
          key: buildozer-${{ runner.os }}
          restore-keys: |
            buildozer-${{ runner.os }}

#      - name: Save .buildozer directory
#        run: mv ~/.buildozer ${{ runner.workspace }}/

#  cache-buildozer:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Cache .buildozer directory
#        uses: actions/cache@v2
#        with:
#          path: ${{ runner.workspace }}/.buildozer
#          key: buildozer-${{ runner.os }}
#          restore-keys: |
#            buildozer-${{ runner.os }}
          
